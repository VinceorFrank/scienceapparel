import React, { createContext, useContext, useState } from "react";

const translations = {
  en: {
    dashboard: "Dashboard",
    products: "Products",
    orders: "Orders",
    users: "Users",
    categories: "Categories",
    activityLog: "Activity Log",
    addProduct: "Add Product",
    overview: "Overview",
    lastUpdated: "Last updated",
    refreshing: "Refreshing...",
    refresh: "Refresh",
    quickActions: "Quick Actions",
    recentOrders: "Recent Orders",
    unknown: "Unknown",
    paid: "Paid",
    pending: "Pending",
    noRecentOrders: "No recent orders",
    stockAlerts: "Stock Alerts",
    stock: "Stock",
    lowStock: "Low Stock",
    noStockAlerts: "No stock alerts",
    customerActivity: "Customer Activity",
    noRecentActivity: "No recent activity",
    // Overview/metrics
    totalSales: "Total Sales",
    totalOrders: "Total Orders",
    activeUsers: "Active Users",
    pendingOrders: "Pending Orders",
    lowStockMetric: "Low Stock",
    actionNeeded: "Action needed",
    recentRegistrations: "Recent Registrations",
    averageOrderValue: "Average Order Value",
    returnRate: "Return Rate",
    low: "Low",
    alerts: "Alerts",
    salesOverLast7Days: "Sales Over the Last 7 Days",
    dailySales: "Daily Sales",
    allGood: "All good",
    productsManagement: "Products Management",
    showAdvancedSearch: "Show Advanced Search",
    searchProducts: "Search products by name, description...",
    allCategories: "All Categories",
    image: "Image",
    name: "Name",
    category: "Category",
    price: "Price",
    actions: "Actions",
    itemsPerPage: "Items per page:",
    showing: "Showing",
    to: "to",
    of: "of",
    previous: "Previous",
    next: "Next",
    page: "Page",
    noProductsFound: "No products found.",
    edit: "Edit",
    delete: "Delete",
    ordersManagement: "Orders Management",
    searchByIdOrCustomer: "Search by ID or customer...",
    allStatuses: "All Statuses",
    orderId: "Order ID",
    customer: "Customer",
    date: "Date",
    total: "Total",
    paymentStatus: "Payment Status",
    shippingStatus: "Shipping Status",
    loading: "Loading...",
    noOrdersFound: "No orders found.",
    notPaid: "Not Paid",
    shipped: "Shipped",
    pendingShipment: "Pending Shipment",
    toggleShipped: "Commande livrée",
  },
  fr: {
    dashboard: "Tableau de bord",
    products: "Produits",
    orders: "Commandes",
    users: "Utilisateurs",
    categories: "Catégories",
    activityLog: "Journal d'activité",
    addProduct: "Ajouter un produit",
    overview: "Aperçu",
    lastUpdated: "Dernière mise à jour",
    refreshing: "Actualisation...",
    refresh: "Actualiser",
    quickActions: "Actions rapides",
    recentOrders: "Commandes récentes",
    unknown: "Inconnu",
    paid: "Payé",
    pending: "En attente",
    noRecentOrders: "Aucune commande récente",
    stockAlerts: "Alertes de stock",
    stock: "Stock",
    lowStock: "Stock faible",
    noStockAlerts: "Aucune alerte de stock",
    customerActivity: "Activité client",
    noRecentActivity: "Aucune activité récente",
    // Overview/metrics
    totalSales: "Ventes totales",
    totalOrders: "Commandes totales",
    activeUsers: "Utilisateurs actifs",
    pendingOrders: "Commandes en attente",
    lowStockMetric: "Stock faible",
    actionNeeded: "Action requise",
    recentRegistrations: "Inscriptions récentes",
    averageOrderValue: "Valeur moyenne des commandes",
    returnRate: "Taux de retour",
    low: "Faible",
    alerts: "Alertes",
    salesOverLast7Days: "Ventes sur les 7 derniers jours",
    dailySales: "Ventes quotidiennes",
    allGood: "Tout est bon",
    productsManagement: "Gestion des produits",
    showAdvancedSearch: "Recherche avancée",
    searchProducts: "Rechercher des produits par nom, description...",
    allCategories: "Toutes les catégories",
    image: "Image",
    name: "Nom",
    category: "Catégorie",
    price: "Prix",
    actions: "Actions",
    itemsPerPage: "Articles par page :",
    showing: "Affichage",
    to: "à",
    of: "de",
    previous: "Précédent",
    next: "Suivant",
    page: "Page",
    noProductsFound: "Aucun produit trouvé.",
    edit: "Éditer",
    delete: "Supprimer",
    ordersManagement: "Gestion des commandes",
    searchByIdOrCustomer: "Rechercher par ID ou client...",
    allStatuses: "Tous les statuts",
    orderId: "ID de commande",
    customer: "Client",
    date: "Date",
    total: "Total",
    paymentStatus: "Statut de paiement",
    shippingStatus: "Statut de livraison",
    loading: "Chargement...",
    noOrdersFound: "Aucune commande trouvée.",
    notPaid: "Non payé",
    shipped: "Livré",
    pendingShipment: "En attente d'expédition",
    toggleShipped: "Basculer livré",
  },
};

const LangContext = createContext();

export const useLang = () => useContext(LangContext);

export const LangProvider = ({ children }) => {
  const [lang, setLang] = useState("en");
  const t = (key) => translations[lang][key] || key;
  return (
    <LangContext.Provider value={{ lang, setLang, t }}>
      {children}
    </LangContext.Provider>
  );
}; 